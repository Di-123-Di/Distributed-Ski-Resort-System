pipeline:
  name: "DistributedSkiResortSystem-SimpleTest"
  description: "Simple test to verify database and RabbitMQ connections"

stages:
  - "build"
  - "test-connections"
  - "deploy-test"
  - "cleanup"

# Build stage jobs
maven-build:
  - stage: "build"
  - image: "openjdk:21-jdk-slim"
  - script:
    - "mvn clean compile -DskipTests"
  - timeout: 300

# Test connections stage jobs
test-rabbitmq-connection:
  - stage: "test-connections"
  - image: "ubuntu:20.04"
  - script:
    - "echo 'Testing RabbitMQ connection...'"
    - "apt-get update && apt-get install -y curl"
    - "curl -f http://localhost:15672/api/overview -u admin:admin || echo 'RabbitMQ management API not accessible'"
  - timeout: 60

test-database-connection:
  - stage: "test-connections"
  - image: "postgres:14"
  - script:
    - "echo 'Testing database connection...'"
    - "PGPASSWORD=cicd_password psql -h host.docker.internal -p 5433 -U cicd_user -d cicd_db -c 'SELECT COUNT(*) FROM pipeline_executions;' || echo 'Database connection failed'"
  - timeout: 60

# Deploy test stage jobs
start-server:
  - stage: "deploy-test"
  - image: "openjdk:21-jdk-slim"
  - script:
    - "cd server-spring"
    - "mvn package -DskipTests -q"
    - "java -jar target/server-spring-1.0-SNAPSHOT.jar --server.port=8081 --spring.rabbitmq.host=host.docker.internal --spring.rabbitmq.username=myuser --spring.rabbitmq.password=mypassword &"
    - "sleep 15"
    - "curl -f http://localhost:8081/actuator/health || exit 1"
    - "echo 'Server started successfully'"
  - timeout: 300
  - dependsOn: ["maven-build"]

test-api:
  - stage: "deploy-test"
  - image: "ubuntu:20.04"
  - script:
    - "echo 'Testing API endpoints...'"
    - "apt-get update && apt-get install -y curl"
    - "curl -X GET http://host.docker.internal:8081/actuator/health"
    - "curl -X POST http://host.docker.internal:8081/skiers/123/seasons/2024/days/1/skiers/456 -H 'Content-Type: application/json' -d '{\"time\":123, \"liftID\":456}' || echo 'API test failed'"
    - "echo 'API tests completed'"
  - timeout: 120
  - dependsOn: ["start-server"]

# Cleanup stage jobs
stop-server:
  - stage: "cleanup"
  - image: "ubuntu:20.04"
  - script:
    - "pkill -f 'server-spring' || true"
    - "echo 'Server stopped'"
  - timeout: 30
  - always: true